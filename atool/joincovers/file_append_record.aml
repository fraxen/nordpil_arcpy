/*--------------------------------------------------------------------------
/*            JOINCOVERS - Geomatics Senior Project - University of Florida
/*--------------------------------------------------------------------------
/*   Program: FILE_APPEND_RECORD.AML
/*   Purpose: Add a record to a file.
/*
/*--------------------------------------------------------------------------
/*     Usage: FILE_APPEND_RECORD <file> <record> {out_file}   
/*                               {NOSEARCH | SEARCH} {variable_name} 
/*
/* Arguments:          file - the file containing records to count
/*                   record - the record to add
/*                 out_file - output file to contain input + new record
/*                 NOSEARCH - record will be added always
/*                   SEARCH - record will be added only if it does not
/*                            already exist in file.
/*            variable_name - returned when SEARCH is used
/*                            true -> record exists, not added
/*                            false -> record not found, record added
/*
/*  Routines:       APPENDREC - adds record to <file> or {out_file}
/*             CHECK_OPENSTAT - check that file was opened without error.
/*             CHECK_READSTAT - check that file was read without error.
/*            CHECK_CLOSESTAT - check that file was closed without error.
/*                      USAGE - return tool usage.
/*                       EXIT - cleanup and exit tool.
/*                    BAILOUT - error handling.
/*
/*   Globals: .file_append_record$*
/*--------------------------------------------------------------------------
/*     Calls: file_search_record.aml
/*--------------------------------------------------------------------------
/*     Notes: 
/*--------------------------------------------------------------------------
/*   History: Sam Henderson -  Nov 98 - Feb 99  - Original coding 
/*==========================================================================
/*
&args file append_record out_file searchop var 
/*
&severity &error &routine bailout
/*
/* Check arguments
&if [null %file%] or [null %append_record%] &then
  &call usage
&if not [null %searchop%] &then &do
  &if [upcase %searchop%] ne NOSEARCH and [upcase %searchop%] ne SEARCH ~
  and %searchop%_ ne #_ &then
    &call USAGE
&end
&else
  &s searchop NOSEARCH

/* Verify file exist.
&if not [exists %file% -file] &then
  &return The file %file% does not exist.

/* Verify output file does not exist.
&if not [null %out_file%] &then &do
  &if %out_file%_ ne #_ &then &do
    &if [exists %out_file% -file] &then
      &return Output file %out_file% already exists.
  &end
&end

/* Check variable_name when SEARCH
&if [upcase %searchop%] = SEARCH &then &do
  &if not [null %var%] &then &do
    &if %var%_ = #_ &then
      &s var = .file_append_record$trash
  &end
  &else
    &s var = .file_append_record$trash    
&end

/* Search for record if needed.
&if [upcase %searchop%] = SEARCH &then &do
  &run file_search_record init %file% %append_record% %var%
  &if not [value %var%] &then
    &call APPENDREC
  /*&else  
  /*  &type  %append_record% already exists in %file%
&end
&else
  &call APPENDREC
  
&call EXIT

&return

/*----------------
&routine APPENDREC
/*----------------
/* Append the record to file.

/* Create output file if needed.
&s target %file%
&if not [null %out_file%] &then &do
  &if %out_file%_ ne #_ &then &do
    &s copystat [copy %file% %out_file% -file]
    &s target %out_file%
  &end
&end

/* Open the file.
&s [before %AML$FILE% .aml]unit = [open %target% openstat -append]
&call CHECK_OPENSTAT

/* Append the record.
&s writestat = [write [value [before %AML$FILE% .aml]unit] %append_record%]

/* Close file.
&s closestat = [close [value [before %AML$FILE% .aml]unit]]
&call CHECK_CLOSESTAT

&return

/*---------------------
&routine CHECK_OPENSTAT
/*---------------------
/* Check status variable for open function.
&select %openstat%
  &when 100 
    &do
      &type No free AML units.
      &call BAILOUT
    &end
  &when 101 
    &do
      &type File not found.
      &call BAILOUT
    &end
  &when 102 
    &do
      &type Couldn't open file.
      &call BAILOUT
    &end
  &when 103
    &do
      &type Couldn't create file.
      &call BAILOUT
    &end
&end
&return

/*---------------------
&routine CHECK_READSTAT
/*---------------------
/* Check the value of readstat after finding (in a loop)
/* that it is no longer equal to 0 (no longer reading records)
&select %readstat%
  &when 100 
    &do
      &type File not open for reading.
      &call BAILOUT
    &end
  &when 101 
    &do
      &type Error during read.
      &call BAILOUT
    &end
  &when 103
    &do
      &type Unable to reopen file (file closed between ARC programs).
      &call BAILOUT
    &end
  &when 104
    &do
      &type String truncated to 1,024 characters.
      &call BAILOUT
    &end
&return

/*----------------------
&routine CHECK_CLOSESTAT
/*----------------------
/* Check that a file was closed
&if %closestat% ne 0 &then
  &type FILE CLOSE ERROR %closestat%.
&return

/*------------
&routine USAGE
/*------------
/* Display usage for this tool
&type Usage: FILE_APPEND_RECORD <file> <record> {out_file}   
&type                           {NOSEARCH | SEARCH} {variable_name} 
&return &inform 

/*-----------
&routine EXIT
/*-----------
/* Clean up and exit menu
&dv .[before %AML$FILE% .aml]$*
&do file &list [listfile xx*[before %AML$FILE% .aml] -file]
  &s delstat = [delete %file%]
&end
&return
 
/*--------------
&routine BAILOUT
/*--------------
&severity &error &ignore
&call exit  /* Comment out later?
&return &warning An error has occurred in [before %AML$FILE% .aml].

